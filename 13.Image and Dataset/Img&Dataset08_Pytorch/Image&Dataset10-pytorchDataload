from typing import Any
import cv2
import numpy as np
from torch.utils.data import Dataset
from torchviwion import transforms

import albumentations as A
from albumentations.pytorch import ToTensorV2

class AlbumentationDataset(Dataset):
  def __init__(self, file_paths, labels, transform=None): #transform 마지막에 들어감
    self.file_paths = file_paths    # 현재 예시에서는 간추린 파일 몇개만 진행
    #self.file_lists = os.listdir(file_paths) - 원래는 이런 리스트파일 필요
    self.labels = labels 
    self.transform = transform 

  def __getitem__(self, index):
    label = self.labels[index]
    file_path = self.file_paths[index]

    image = cv2.imread(file_path)

    image = cv2.cvtColor(image, cv2.Color_BGR2RGB)
    if self.transform:
      augmented = self. transform(image=image)
      image = augmented['image']

    return image, label

  def __len__(self):
    return len(self.file_paths)


if __name__ == "__main__":
  
    albumentations_transform = A.Compose([
       A.Resize(256, 256),
       A.RandomCrop(224, 224),
       A.HorizontalFlip(),
       A.Normalize(
          mean = [0.485, 0.456, 0.406],  #결과 가장 잘 나오는 평균 
          std = [0.229, 0.224, 0.225]
          ), #결과 가장 잘 나오는 표준편차
        ToTensorV2()
    ])
    

  dataset = AlbumentationsDataset(
      ["sample_data_01\train\dew\2208.jpg", #relative path
       "sample_data_01\train\dew\2213.jpg",
       "sample_data_01\train\dew\2220.jpg"],
       [0, 1, 2],
       transfor = albumentations_transform
  )

    pass
